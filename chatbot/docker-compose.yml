version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: campus_chatbot_mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: campus_chatbot
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - chatbot_network

  # Redis (for caching and session management)
  redis:
    image: redis:7-alpine
    container_name: campus_chatbot_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    networks:
      - chatbot_network

  # FastAPI Application
  chatbot_api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: campus_chatbot_api
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017/campus_chatbot?authSource=admin
      - REDIS_URL=redis://:redis123@redis:6379/0
      - DEBUG=false
      - HOST=0.0.0.0
      - PORT=8000
    volumes:
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - redis
    networks:
      - chatbot_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx (Reverse Proxy and Load Balancer)
  nginx:
    image: nginx:alpine
    container_name: campus_chatbot_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/usr/share/nginx/html/static:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - chatbot_api
    networks:
      - chatbot_network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  chatbot_network:
    driver: bridge